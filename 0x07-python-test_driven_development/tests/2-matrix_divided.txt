The ``2-matrix_divided test`` module
=================================

Using ``matrix_divided``
---------------------

This file is in restructured text format.
First import ``matrix_divided`` from the ``2-matrix_divided`` module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Basic usage:

    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Non int/float inputs in lists of matrix:

    >>> matrix = [['h', 'o', 'l'], ['b', 5, 6]]
    >>> print(matrix_divided(matrix, 5))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Must "div" be int/float:

    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, 's'))
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Zero "div" input:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

Negative variables in list inputs:

    >>> matrix = [[1, 2, -3], [4, 5, -6]]
    >>> print(matrix_divided(matrix, 2))
    [[0.5, 1.0, -1.5], [2.0, 2.5, -3.0]]

Empty matrix input:

    >>> matrix = [[]]
    >>> print(matrix_divided(matrix, 2))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
